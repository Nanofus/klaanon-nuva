generator client {
  provider = "prisma-kysely"
  output   = "../src/lib/server"
  fileName = "database.types.ts"
}

datasource db {
  provider  = "postgresql"
  url       = env("VITE_POSTGRES_PRISMA_URL")
  directUrl = env("VITE_POSTGRES_URL_NON_POOLING")
}

model Meta {
  key   String  @id
  value String?
}

model User {
  id          Int       @id @default(autoincrement())
  email       String    @unique
  username    String
  displayName String
  role        Role      @default(READER)
  comments    Comment[]
  posts       Post[]    @relation("PostToUser")
}

model Post {
  id         Int        @id @default(autoincrement())
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  title      String
  published  Boolean    @default(false)
  comments   Comment[]
  categories Category[] @relation("CategoryToPost")
  tags       Tag[]      @relation("PostToTag")
  authors    User[]     @relation("PostToUser")
}

model Comment {
  id              Int       @id @default(autoincrement())
  content         String
  postId          Int
  authorId        Int
  parentCommentId Int?
  author          User      @relation(fields: [authorId], references: [id])
  parentComment   Comment?  @relation("ChildComments", fields: [parentCommentId], references: [id])
  childComments   Comment[] @relation("ChildComments")
  post            Post      @relation(fields: [postId], references: [id])
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String
  posts Post[] @relation("CategoryToPost")
}

model Tag {
  id    Int    @id @default(autoincrement())
  name  String
  posts Post[] @relation("PostToTag")
}

enum Role {
  READER
  AUTHOR
  ADMIN
}
